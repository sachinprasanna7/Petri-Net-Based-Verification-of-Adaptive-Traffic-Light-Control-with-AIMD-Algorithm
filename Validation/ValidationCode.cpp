#include <bits/stdc++.h>
#include <cstdlib>
#include <iostream>
using namespace std;


int main()
{
    unordered_set<float> TVals;// to check whether all values of T are generated by the program
    float t = 0.5, temp = 0.0;// intitial conditions
    int plvl = 0, num = 0, lvl = 1;// intitial conditions

    cout<<"\n\n****WELCOME TO THE PETRI NET VALIDATION!****\n\n";
    cout << "Level" << "\t" << "Previous level" << "\t" << "T value" << "\t\t" << "Temp" << "\t" << "New T value" << endl;

    while(num < 80){// 80 random values are generated.
        if(lvl == 1){// if the sensor detects level 1
            if(plvl == lvl){// if previous level is same as current level
                temp = 0;
                t = 0.5;
            }else{
                temp = 0.125;
            }
        }else if(lvl == 2){// if the sensor detects level 2
            temp = 1/8;
            if(t+temp > 1){
                if(plvl == lvl){// if previous level is same as current level
                    t = 1;
                    temp = 0;
                }else{
                    t = 0.5;
                }
            }
        }else if(lvl == 3){// if the sensor detects level 3
            temp = 0.25;
            if(t+temp > 1){
                if(plvl == lvl){// if previous level is same as current level
                    t = 1;
                    temp = 0;
                }else{
                    t = 0.5;
                }
            }
            
        }
        plvl = lvl;// storing previous level
        lvl = (rand()%3)+1;// randomly choosing new level
        cout << lvl << "\t\t" << plvl << "\t" << t << "\t\t" << temp << "\t\t" << (((t+temp)>1)?1:(t+temp)) << endl;// printing previous and new values of t, lvl, plvl, temp
        TVals.insert(t);// storing values of t in TVals
        t += temp;// Additive Increase
        num++;
    }

    cout << "\n\n****PETRI NET VALIDATION SUCCESSFUL!****\n\n";
    return 0;
}
